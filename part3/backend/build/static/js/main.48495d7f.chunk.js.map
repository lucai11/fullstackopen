{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","baseUrl","noteService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","initialNotes","notesToShow","filter","map","find","changedNote","updatedNote","toggleImportanceOf","onSubmit","event","preventDefault","noteObj","date","concat","error","console","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"yKAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACE,+BACGH,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAAoCC,Q,gBCNpCI,EAAU,cAoBDC,EAHK,CAAEC,OAfP,WAEb,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAabC,OAVf,SAAAC,GAEb,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQLI,OALvB,SAACC,EAAIH,GAElB,OADgBN,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UC4D5BO,EAtEH,SAACC,GAAW,IAAD,EAEMC,mBAASD,EAAME,OAFrB,mBAEdA,EAFc,KAEPC,EAFO,OAGSF,mBAAS,YAHlB,mBAGdG,EAHc,KAGLC,EAHK,OAISJ,oBAAS,GAJlB,mBAIdK,EAJc,KAILC,EAJK,KAkDrBC,qBANiB,WACftB,EAAYC,SACTG,MAAK,SAAAmB,GACJN,EAASM,QAGK,IAEpB,IAAMC,EAAcJ,EAAUJ,EAAQA,EAAMS,QAAO,SAAAhC,GAAI,OAAuB,IAAnBA,EAAKG,aAChE,OACE,gCACE,uCACA,6BACG4B,EAAYE,KAAI,SAAAjC,GAAI,OACjB,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAoB,kBAxBnC,SAACiB,GAC1B,IAAMlB,EAAOuB,EAAMW,MAAK,SAAAlC,GAAI,OAAIA,EAAKkB,KAAOA,KACtCiB,EAAW,2BAAQnC,GAAR,IAAcG,WAAYH,EAAKG,YAChDI,EACGU,OAAOC,EAAIiB,GACXxB,MAAK,SAAAyB,GACJZ,EAASD,EAAMU,KAAI,SAAAjC,GAAI,OAAIA,EAAKkB,KAAOA,EAAKlB,EAAOoC,SAkBWC,CAAmBrC,EAAKkB,MAAvElB,EAAKkB,SAGtB,uBAAMoB,SAxDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAU,CAEdrC,QAASqB,EACTiB,KAAM,cACNvC,WAAW,GAEb,IACEI,EAAYO,OAAO2B,GAChB9B,MAAK,SAAAC,GACJY,EAASD,EAAMoB,OAAO/B,IACtBc,EAAW,OAEhB,MAAOkB,GACNC,QAAQD,MAAMA,EAAMhC,YAyCpB,UACE,uBAAOkC,MAASrB,EAASsB,SArCD,SAACR,GAE7Bb,EAAWa,EAAMS,OAAOF,UAoCpB,wBAAQG,KAAK,SAAb,qBAEF,wBAAQ5C,QAnCU,WACpBuB,GAAYD,IAkCV,0BC9CNuB,IAASC,OACP,cAAC,EAAD,CAAK5B,MAtBO,CACZ,CACEL,GAAI,EACJd,QAAS,eACTsC,KAAM,2BACNvC,WAAW,GAEb,CACEe,GAAI,EACJd,QAAS,sCACTsC,KAAM,2BACNvC,WAAW,GAEb,CACEe,GAAI,EACJd,QAAS,+DACTsC,KAAM,2BACNvC,WAAW,MAMbiD,SAASC,eAAe,W","file":"static/js/main.48495d7f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important ? 'make not important' : 'make important'\r\n  return (\r\n    <li>\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n    \r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes/'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst noteService = { getAll, create, update }\r\n\r\n\r\nexport default noteService","import React, { useEffect, useState } from 'react'\r\nimport Note from './components/Note'\r\n//import axios from 'axios'\r\nimport noteService from './services/notes'\r\n\r\nconst App = (props) => {\r\n\r\n  const [notes, setNotes]  = useState(props.notes)\r\n  const [newNote, setNewNote] = useState('new note')\r\n  const [showAll, setShowAll] = useState(false)\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObj = {\r\n      \r\n      content: newNote,\r\n      date: 'January 1st',\r\n      important: false\r\n    }\r\n    try{\r\n      noteService.create(noteObj)\r\n        .then(response => {\r\n          setNotes(notes.concat(response))\r\n          setNewNote('')\r\n        })\r\n    }catch (error){\r\n      console.error(error.response)\r\n    }\r\n    \r\n  }\r\n\r\n  const handleNoteInputChange = (event) =>{\r\n    //console.log(event.target.value)\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const toggleShowAll = () => {\r\n    setShowAll(!showAll)\r\n  }\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(note => note.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(updatedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : updatedNote))\r\n      })\r\n\r\n  }\r\n  const getNotes = () => {\r\n    noteService.getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }\r\n  useEffect(getNotes, [])\r\n  \r\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true)\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <ul>\r\n        {notesToShow.map(note => \r\n            <Note key={note.id} note={note} toggleImportance = {() => toggleImportanceOf(note.id)}/>\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input value = {newNote} onChange = {handleNoteInputChange}/>\r\n        <button type=\"submit\">save</button>\r\n      </form> \r\n      <button onClick={toggleShowAll}>Show All</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\r\nimport App from './App.js'\r\n\r\nconst notes = [\r\n  {\r\n    id: 1,\r\n    content: 'HTML is easy',\r\n    date: '2019-05-30T17:30:31.098Z',\r\n    important: true\r\n  },\r\n  {\r\n    id: 2,\r\n    content: 'Browser can execute only JavaScript',\r\n    date: '2019-05-30T18:39:34.091Z',\r\n    important: false\r\n  },\r\n  {\r\n    id: 3,\r\n    content: 'GET and POST are the most important methods of HTTP protocol',\r\n    date: '2019-05-30T19:20:14.298Z',\r\n    important: true\r\n  }\r\n]\r\n\r\nReactDOM.render(\r\n  <App notes={notes} />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}